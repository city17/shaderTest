/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei/useGLTF";
import { useMatcapTexture } from "@react-three/drei";
import { useFrame, useThree } from "react-three-fiber";
import { animated, useSpring } from "@react-spring/three";

const Logo = (props) => {
  const logoRef = useRef();
  const { viewport } = useThree();

  useFrame(({ mouse }) => {
    const y = (mouse.y * viewport.height) / 2;

    logoRef.current.rotation.x = y / 400;
    // logoRef.current.rotation.y = x / 400;
  });

  const { nodes } = useGLTF(process.env.PUBLIC_URL + "/logo.glb");

  const [matcapTexture] = useMatcapTexture("7A7A7A_D9D9D9_BCBCBC_B4B4B4");

  const [active, setActive] = useState(false);
  const [hover, setHover] = useState(false);

  const { rotation } = useSpring({
    rotation: active ? [0, 3, 0] : [0, 0, 0],
  });
  const { scale } = useSpring({
    scale: hover ? [0.11, 0.11, 0.11] : [0.1, 0.1, 0.1],
  });

  return (
    <animated.mesh
      {...props}
      ref={logoRef}
      geometry={nodes.mesh_0.geometry}
      scale={scale}
      rotation={rotation}
      onClick={() => {
        setActive(!active);
      }}
      onPointerOver={() => {
        setHover(true);
      }}
      onPointerOut={() => {
        setHover(false);
      }}
    >
      <meshMatcapMaterial
        attach="material"
        matcap={matcapTexture}
        transparent
        opacity={0.75}
        color="#14CEFF"
      />
    </animated.mesh>
  );
};

// useGLTF.preload("/logo.glb");

export default Logo;
